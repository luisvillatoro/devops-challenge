AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template To Create a DynamoDB

Resources:
  DDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
       Ref: challenge-dbtable
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
        - AttributeName: starts_at
          AttributeType: N
        - AttributeName: ends_at_index
          AttributeType: S
        - AttributeName: ends_at
          AttributeType: N
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
        - AttributeName: starts_at
          KeyType: RANGE
        - AttributeName: ends_at_index
          KeyType: HASH
        - AttributeName: ends_at
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 100
        WriteCapacityUnits: 1
  WriteCapacityScaling:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 1000
      MinCapacity: 1
      ResourceId: !Sub table/${challenge-dbtable}
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb
  WriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      Ref: WriteCapacityScaling
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  ReadCapacityScaling:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 1000
      MinCapacity: 100
      ResourceId: !Sub table/${challenge-dbtable}
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb
  ReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      Ref: ReadCapacityScaling
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization